// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScopeInfo renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScopeInfo
    currentScope={Object {}}
    operationType=""
    scopeHistory={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          className="font underline has-text-success operation-type"
        />,
        Array [
          <div
            className="scopeBox"
          />,
        ],
      ],
      "className": "logBox",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "font underline has-text-success operation-type",
        },
        "ref": null,
        "rendered": null,
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "scopeBox",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="font underline has-text-success operation-type"
          />,
          Array [
            <div
              className="scopeBox"
            />,
          ],
        ],
        "className": "logBox",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "font underline has-text-success operation-type",
          },
          "ref": null,
          "rendered": null,
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "scopeBox",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`ScopeInfo with scope props renders scope name 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScopeInfo
    currentScope={
      Object {
        "num": Object {
          "type": "number",
          "value": 5,
        },
        "scopeName": Object {
          "type": "string",
          "value": "Global",
        },
        "this": Object {
          "type": "string",
          "value": "window",
        },
      }
    }
    operationType="Program"
    scopeHistory={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          className="font underline has-text-success operation-type"
        >
          Program
        </h2>,
        Array [
          <div
            className="scopeBox"
          >
            <h2
              className="font closure has-text-success closure"
            >
              Global
               Closure
            </h2>
            <p
              className="font has-text-success property"
            >
              this: window
            </p>
            <p
              className="font has-text-success property"
            >
              num: 5
            </p>
          </div>,
        ],
      ],
      "className": "logBox",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Program",
          "className": "font underline has-text-success operation-type",
        },
        "ref": null,
        "rendered": "Program",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="font closure has-text-success closure"
            >
              Global
               Closure
            </h2>,
            <p
              className="font has-text-success property"
            >
              this: window
            </p>,
            <p
              className="font has-text-success property"
            >
              num: 5
            </p>,
          ],
          "className": "scopeBox",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0scopeName",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Global",
                " Closure",
              ],
              "className": "font closure has-text-success closure",
            },
            "ref": null,
            "rendered": Array [
              "Global",
              " Closure",
            ],
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": "0this",
            "nodeType": "host",
            "props": Object {
              "children": "this: window",
              "className": "font has-text-success property",
            },
            "ref": null,
            "rendered": "this: window",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": "0num",
            "nodeType": "host",
            "props": Object {
              "children": "num: 5",
              "className": "font has-text-success property",
            },
            "ref": null,
            "rendered": "num: 5",
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="font underline has-text-success operation-type"
          >
            Program
          </h2>,
          Array [
            <div
              className="scopeBox"
            >
              <h2
                className="font closure has-text-success closure"
              >
                Global
                 Closure
              </h2>
              <p
                className="font has-text-success property"
              >
                this: window
              </p>
              <p
                className="font has-text-success property"
              >
                num: 5
              </p>
            </div>,
          ],
        ],
        "className": "logBox",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Program",
            "className": "font underline has-text-success operation-type",
          },
          "ref": null,
          "rendered": "Program",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2
                className="font closure has-text-success closure"
              >
                Global
                 Closure
              </h2>,
              <p
                className="font has-text-success property"
              >
                this: window
              </p>,
              <p
                className="font has-text-success property"
              >
                num: 5
              </p>,
            ],
            "className": "scopeBox",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0scopeName",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Global",
                  " Closure",
                ],
                "className": "font closure has-text-success closure",
              },
              "ref": null,
              "rendered": Array [
                "Global",
                " Closure",
              ],
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": "0this",
              "nodeType": "host",
              "props": Object {
                "children": "this: window",
                "className": "font has-text-success property",
              },
              "ref": null,
              "rendered": "this: window",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": "0num",
              "nodeType": "host",
              "props": Object {
                "children": "num: 5",
                "className": "font has-text-success property",
              },
              "ref": null,
              "rendered": "num: 5",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
